{"ast":null,"code":"var _jsxFileName = \"C:\\\\classfolder\\\\ReactJsReposytoryProjects\\\\src\\\\pages\\\\Dashboard\\\\index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport income from \"../../assets/income.svg\";\nimport outcome from \"../../assets/outcome.svg\";\nimport total from \"../../assets/total.svg\";\nimport api from '../../services/api';\nimport Header from '../../components/Header';\nimport formatValue from '../../utils/formatValue';\nimport { Container, CardContainer, Card, TableContainer } from './styles';\n\nconst Dashboard = () => {\n  const [transactions, setTransactions] = useState([]);\n  const [balances, setBalance] = useState({});\n  useEffect(() => {\n    async function loadTransactions() {\n      const response = await api.get('/transactions');\n      const transactionsFormatted = response.data.transactions.map(transaction => ({ ...transaction,\n        formattedValue: formatValue(transaction.value),\n        formattedDate: new Date(transaction.created_at).toLocaleDateString('pt-BR')\n      }));\n      const balanceFormatted = {\n        income: formatValue(response.data.balance.income),\n        outcome: formatValue(response.data.balance.outcome),\n        total: formatValue(response.data.balance.total)\n      };\n      setTransactions(transactionsFormatted);\n      setBalance(balanceFormatted);\n    }\n\n    loadTransactions();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Entradas\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: income,\n    alt: \"Income\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"balance-income\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, balances.income)), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, \"Sa\\xEDdas\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: outcome,\n    alt: \"Outcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"balance-outcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, balances.outcome)), /*#__PURE__*/React.createElement(Card, {\n    total: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: total,\n    alt: \"Total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    \"data-testid\": \"balance-total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, balances.total))), /*#__PURE__*/React.createElement(TableContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, \"T\\xEDtulo\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Pre\\xE7o\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Categoria\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"Data\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, transactions.map(_ref => {\n    let {\n      id,\n      title,\n      type,\n      formattedValue,\n      formattedDate,\n      category\n    } = _ref;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, title), /*#__PURE__*/React.createElement(\"td\", {\n      className: type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, type === 'outcome' && '- ', formattedValue), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, category.title), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, formattedDate));\n  }))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["C:/classfolder/ReactJsReposytoryProjects/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","api","Header","formatValue","Container","CardContainer","Card","TableContainer","Dashboard","transactions","setTransactions","balances","setBalance","loadTransactions","response","get","transactionsFormatted","data","map","transaction","formattedValue","value","formattedDate","Date","created_at","toLocaleDateString","balanceFormatted","income","balance","outcome","total","id","title","type","category"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport income from '../../assets/income.svg';\r\nimport outcome from '../../assets/outcome.svg';\r\nimport total from '../../assets/total.svg';\r\n\r\nimport api from '../../services/api';\r\n\r\nimport Header from '../../components/Header';\r\n\r\nimport formatValue from '../../utils/formatValue';\r\n\r\nimport { Container, CardContainer, Card, TableContainer } from './styles';\r\n\r\ninterface Transaction {\r\n  id: string;\r\n  title: string;\r\n  value: number;\r\n  formattedValue: string;\r\n  formattedDate: string;\r\n  type: 'income' | 'outcome';\r\n  category: { title: string };\r\n  created_at: Date;\r\n}\r\n\r\ninterface Balance {\r\n  income: string;\r\n  outcome: string;\r\n  total: string;\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  const [balances, setBalance] = useState<Balance>({} as Balance);\r\n\r\n  useEffect(() => {\r\n    async function loadTransactions(): Promise<void> {\r\n      const response = await api.get('/transactions');\r\n\r\n      const transactionsFormatted = response.data.transactions.map(\r\n        (transaction: Transaction) => ({\r\n          ...transaction,\r\n          formattedValue: formatValue(transaction.value),\r\n          formattedDate: new Date(transaction.created_at).toLocaleDateString(\r\n            'pt-BR',\r\n          ),\r\n        }),\r\n      );\r\n\r\n      const balanceFormatted = {\r\n        income: formatValue(response.data.balance.income),\r\n        outcome: formatValue(response.data.balance.outcome),\r\n        total: formatValue(response.data.balance.total),\r\n      };\r\n\r\n      setTransactions(transactionsFormatted);\r\n      setBalance(balanceFormatted);\r\n    }\r\n\r\n    loadTransactions();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Container>\r\n        <CardContainer>\r\n          <Card>\r\n            <header>\r\n              <p>Entradas</p>\r\n              <img src={income} alt=\"Income\" />\r\n            </header>\r\n            <h1 data-testid=\"balance-income\">{balances.income}</h1>\r\n          </Card>\r\n          <Card>\r\n            <header>\r\n              <p>Saídas</p>\r\n              <img src={outcome} alt=\"Outcome\" />\r\n            </header>\r\n            <h1 data-testid=\"balance-outcome\">{balances.outcome}</h1>\r\n          </Card>\r\n          <Card total>\r\n            <header>\r\n              <p>Total</p>\r\n              <img src={total} alt=\"Total\" />\r\n            </header>\r\n            <h1 data-testid=\"balance-total\">{balances.total}</h1>\r\n          </Card>\r\n        </CardContainer>\r\n\r\n        <TableContainer>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Título</th>\r\n                <th>Preço</th>\r\n                <th>Categoria</th>\r\n                <th>Data</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {transactions.map(\r\n                ({\r\n                  id,\r\n                  title,\r\n                  type,\r\n                  formattedValue,\r\n                  formattedDate,\r\n                  category,\r\n                }: Transaction) => (\r\n                  <tr key={id}>\r\n                    <td className=\"title\">{title}</td>\r\n                    <td className={type}>\r\n                      {type === 'outcome' && '- '}\r\n                      {formattedValue}\r\n                    </td>\r\n                    <td>{category.title}</td>\r\n                    <td>{formattedDate}</td>\r\n                  </tr>\r\n                ),\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </TableContainer>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"]},"metadata":{},"sourceType":"module"}