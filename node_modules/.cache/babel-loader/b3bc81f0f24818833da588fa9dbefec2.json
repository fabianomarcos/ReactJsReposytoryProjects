{"ast":null,"code":"var _jsxFileName = \"C:\\\\classfolder\\\\ReactJsReposytoryProjects\\\\src\\\\components\\\\Upload\\\\index.tsx\";\nimport React from 'react';\nimport Dropzone from 'react-dropzone';\nimport { DropContainer, UploadMessage } from './styles';\n\nconst Upload = _ref => {\n  let {\n    onUpload\n  } = _ref;\n\n  function renderDragMessage(isDragActive, isDragRejest) {\n    if (!isDragActive) {\n      return /*#__PURE__*/React.createElement(UploadMessage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, \"Selecione ou arraste o arquivo aqui.\");\n    }\n\n    if (isDragRejest) {\n      return /*#__PURE__*/React.createElement(UploadMessage, {\n        type: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 14\n        }\n      }, \"Arquivo n\\xE3o suportado\");\n    }\n\n    return /*#__PURE__*/React.createElement(UploadMessage, {\n      type: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, \"Solte o arquivo aqui\");\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Dropzone, {\n    accept: \".csv, application/vnd.ms-excel, text/csv\",\n    onDropAccepted: files => onUpload(files),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, _ref2 => {\n    let {\n      getRootProps,\n      getInputProps,\n      isDragActive,\n      isDragReject\n    } = _ref2;\n    return /*#__PURE__*/React.createElement(DropContainer, Object.assign({}, getRootProps(), {\n      isDragActive: isDragActive,\n      isDragReject: isDragReject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      \"data-testid\": \"upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    })), renderDragMessage(isDragActive, isDragReject));\n  }));\n};\n\nexport default Upload;","map":{"version":3,"sources":["C:/classfolder/ReactJsReposytoryProjects/src/components/Upload/index.tsx"],"names":["React","Dropzone","DropContainer","UploadMessage","Upload","onUpload","renderDragMessage","isDragActive","isDragRejest","files","getRootProps","getInputProps","isDragReject"],"mappings":";AAAA,OAAOA,KAAP,MAAiC,OAAjC;AAEA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,UAA7C;;AAMA,MAAMC,MAA6B,GAAG,QAA+B;AAAA,MAA9B;AAAEC,IAAAA;AAAF,GAA8B;;AACnE,WAASC,iBAAT,CACEC,YADF,EAEEC,YAFF,EAGa;AACX,QAAI,CAACD,YAAL,EAAmB;AACjB,0BACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF;AAGD;;AAED,QAAIC,YAAJ,EAAkB;AAChB,0BAAO,oBAAC,aAAD;AAAe,QAAA,IAAI,EAAC,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAP;AACD;;AAED,wBAAO,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;;AAED,sBACE,uDACE,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAC,0CAAjB;AAA4D,IAAA,cAAc,EAAGC,KAAD,IAAWJ,QAAQ,CAACI,KAAD,CAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAC;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA,aAAhB;AAA+BJ,MAAAA,YAA/B;AAA6CK,MAAAA;AAA7C,KAAD;AAAA,wBACC,oBAAC,aAAD,oBACMF,YAAY,EADlB;AAEE,MAAA,YAAY,EAAEH,YAFhB;AAGE,MAAA,YAAY,EAAEK,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAKE,+CAAWD,aAAa,EAAxB;AAA4B,qBAAY,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALF,EAMGL,iBAAiB,CAACC,YAAD,EAAeK,YAAf,CANpB,CADD;AAAA,GADH,CADF,CADF;AAgBD,CAlCD;;AAoCA,eAAeR,MAAf","sourcesContent":["import React, { ReactNode } from 'react';\r\n\r\nimport Dropzone from 'react-dropzone';\r\nimport { DropContainer, UploadMessage } from './styles';\r\n\r\ninterface UploadProps {\r\n  onUpload: Function;\r\n}\r\n\r\nconst Upload: React.FC<UploadProps> = ({ onUpload }: UploadProps) => {\r\n  function renderDragMessage(\r\n    isDragActive: boolean,\r\n    isDragRejest: boolean,\r\n  ): ReactNode {\r\n    if (!isDragActive) {\r\n      return (\r\n        <UploadMessage>Selecione ou arraste o arquivo aqui.</UploadMessage>\r\n      );\r\n    }\r\n\r\n    if (isDragRejest) {\r\n      return <UploadMessage type=\"error\">Arquivo n√£o suportado</UploadMessage>;\r\n    }\r\n\r\n    return <UploadMessage type=\"success\">Solte o arquivo aqui</UploadMessage>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Dropzone accept=\".csv, application/vnd.ms-excel, text/csv\" onDropAccepted={(files) => onUpload(files)}>\r\n        {({ getRootProps, getInputProps, isDragActive, isDragReject }): any => (\r\n          <DropContainer\r\n            {...getRootProps()}\r\n            isDragActive={isDragActive}\r\n            isDragReject={isDragReject}\r\n          >\r\n            <input {...getInputProps()} data-testid=\"upload\" />\r\n            {renderDragMessage(isDragActive, isDragReject)}\r\n          </DropContainer>\r\n        )}\r\n      </Dropzone>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}